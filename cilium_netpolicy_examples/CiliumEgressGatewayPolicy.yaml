apiVersion: cilium.io/v2
kind: CiliumEgressGatewayPolicy
metadata:
  name: egress-sample
spec:
  selectors:
  - podSelector:
      matchLabels:
        org: empire
        class: mediabot
        # The following label selects default namespace
        io.kubernetes.pod.namespace: default
    # Or use namespace label selector to select multiple namespaces
    # namespaceSelector:
    #  matchLabels:
    #    ns: default
  destinationCIDRs:
  - 192.168.60.13/32
  egressGateway:
    nodeSelector:
      matchLabels:
        # The following label selects which node will act as egress gateway for
        # this policy
        egress-node: true
    # IP used to masquerade traffic leaving the cluster
    egressIP: "192.168.60.100"
    # Alternatively it is possible to:
    #
    # a) specify which interface should be used to masquerade traffic.
    # In this case the first IPv4 assigned to said interface will be used as
    # egressIP
    # interface: eth1
    #
    # b) omit both egressIP and interface.
    # In this case the first IPv4 assigned to the interface with the default
    # route will be used as egressIP

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: "egress-ip-assign"
  labels:
    name: "egress-ip-assign"
spec:
  replicas: 1
  selector:
    matchLabels:
      name: "egress-ip-assign"
  template:
    metadata:
      labels:
        name: "egress-ip-assign"
    spec:
      affinity:
        # the following pod affinity ensures that the "egress-ip-assign" pod
        # runs on the same node as the mediabot pod
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: class
                    operator: In
                    values:
                      - mediabot
                  - key: org
                    operator: In
                    values:
                      - empire
              topologyKey: "kubernetes.io/hostname"
      hostNetwork: true
      containers:
      - name: egress-ip
        image: docker.io/library/busybox:1.31.1
        command: ["/bin/sh","-c"]
        securityContext:
          privileged: true
        env:
        - name: EGRESS_IPS
          value: "192.168.60.100/24 192.168.60.101/24"
        args:
        - "for i in $EGRESS_IPS; do ip address add $i dev enp0s8; done; sleep 10000000"
        lifecycle:
          preStop:
            exec:
              command:
              - "/bin/sh"
              - "-c"
              - "for i in $EGRESS_IPS; do ip address del $i dev enp0s8; done"